{"mappings":"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","sources":["mediaWiki.js","index.js"],"sourcesContent":["const MEDIA_WIKI_API_URL = 'https://en.wikipedia.org/w/api.php?origin=*';\n\nconst module = {};\n\nfunction getUrl(searchParams) {\n    const url = new URL(MEDIA_WIKI_API_URL);\n    for (const [key, value] of Object.entries(searchParams)) {\n        url.searchParams.append(key, value);\n    }\n    return url;\n}\n\nasync function get(searchParams) {\n    const url = getUrl(searchParams);\n\n    let response;\n    try {\n        response = await fetch(url);\n    } catch (e) {\n        console.error(`Error while fetching data from ${url.href}: ${e.message}`);\n        return null;\n    }\n\n    if (!response.ok) {\n        console.error(`HTTP-Error while fetching data from ${url.href}: ${response.status}`);\n        return null;\n    }\n\n    let data;\n    try {\n        data = await response.json();\n    } catch (e) {\n        console.error(`Error while parsing response from ${url.href}: ${e.message}`);\n        return null;\n    }\n\n    return data;\n}\n\nmodule.searchWikiPagesByTitle = async function searchWikiPagesByTitle(title, limit = 10) {\n    // https://www.mediawiki.org/wiki/API:Opensearch\n    if (!title || !(limit > 0)) {\n        return null;\n    }\n\n    const searchParams = {\n        action: 'opensearch',\n        search: title,\n        limit,\n        format: 'json',\n    };\n\n    return get(searchParams);\n};\n\nexport default module;\n","import MediaWiki from '/mediaWiki.js';\n\nconst SEARCH_DELAY = 300;\nconst SEARCHES_KEY = 'searches';\nconst LOCAL_SUGGESTIONS_COUNT = 5;\nconst TOTAL_SUGGESTIONS_COUNT = 10;\nconst LAST_SEARCHES_COUNT = 3;\n\nconst searchEl = document.getElementById('search');\nconst suggestionListEl = document.getElementById('suggestions');\nconst lastSearchListEl = document.getElementById('last-searches');\nconst contentEl = document.getElementById('content');\n\nlet searchTimer;\n\nfunction getSuggestions(searchResult) {\n    if (!searchResult) {\n        return [];\n    }\n\n    const searchString = searchResult[0];\n    const titles = searchResult[1];\n    const urls = searchResult[3];\n\n    return titles.reduce((result, title, index) => {\n        result.push([searchString, title, urls[index]]);\n        return result;\n    }, []);\n}\n\nfunction getSuggestionElements(suggestions, local = false) {\n    const result = [];\n\n    for (const [searchString, title, url] of suggestions) {\n        const suggestionEl = document.createElement('li');\n        suggestionEl.className = 'suggestion';\n\n        const linkEl = document.createElement('a');\n        linkEl.className = 'suggestion__link';\n        linkEl.className += local ? ' suggestion__link_local' : ' suggestion__link_remote';\n        linkEl.href = url;\n        linkEl.append(title);\n        linkEl.onclick = onSuggestionClicked;\n        suggestionEl.append(linkEl);\n\n        result.push(suggestionEl);\n    }\n\n    return result;\n}\n\nfunction onSuggestionClicked(event) {\n    event.preventDefault();\n    contentEl.src = this.href;\n    storeSearch(searchEl.value, this.innerHTML, this.href);\n}\n\nfunction storeSearch(searchString, title, url) {\n    const searches = getStoredSearches() || [];\n    searches.push([searchString, title, url]);\n\n    try {\n        localStorage.setItem(SEARCHES_KEY, JSON.stringify(searches));\n    } catch (e) {\n        console.error(`Error while saving searches to storage: ${e.message}`);\n        return;\n    }\n\n    showLastSearches(searches);\n}\n\nfunction getStoredSearches() {\n    const searches = localStorage.getItem(SEARCHES_KEY);\n    try {\n        return JSON.parse(searches);\n    } catch (e) {\n        console.error(`Error while parsing searches from storage: ${e.message}`);\n    }\n    return null;\n}\n\nfunction searchInStorage(searchString, limit = LOCAL_SUGGESTIONS_COUNT) {\n    const searches = getStoredSearches();\n    if (!searches) {\n        return null;\n    }\n\n    const result = searches.filter(([searchString_, title, url]) => searchString_ === searchString);\n    if (!result) {\n        return null;\n    }\n\n    return result.slice(-limit);\n}\n\nfunction showLastSearches(searches = null) {\n    searches = searches || getStoredSearches();\n    if (!searches) {\n        return;\n    }\n\n    const lastSearches = searches.slice(-LAST_SEARCHES_COUNT);\n    lastSearches.reverse();\n    lastSearchListEl.innerHTML = '';\n    lastSearchListEl.append(...getSuggestionElements(lastSearches));\n}\n\nfunction clearSuggestions() {\n    suggestionListEl.innerHTML = '';\n}\n\nshowLastSearches();\n\nsearchEl.oninput = () => {\n    clearTimeout(searchTimer);\n\n    if (!searchEl.value) {\n        // Clear suggestions immediately\n        clearSuggestions();\n        return;\n    }\n\n    searchTimer = setTimeout(\n        (searchString) => {\n            const localSuggestions = searchInStorage(searchString, LOCAL_SUGGESTIONS_COUNT) || [];\n            const limit = TOTAL_SUGGESTIONS_COUNT - localSuggestions.length;\n\n            MediaWiki.searchWikiPagesByTitle(searchString, limit)\n                .then((searchResult) => {\n                    const remoteSuggestions = getSuggestions(searchResult);\n                    clearSuggestions();\n                    suggestionListEl.append(...getSuggestionElements(localSuggestions, true));\n                    suggestionListEl.append(...getSuggestionElements(remoteSuggestions));\n                })\n                .catch((e) => console.log(e.message));\n        },\n        SEARCH_DELAY,\n        searchEl.value\n    );\n};\n\nwindow.onstorage = () => showLastSearches();\n"],"names":["$dfb6070808bdd883$var$module","async","$dfb6070808bdd883$var$get","searchParams","url","URL","key","value","Object","entries","append","$dfb6070808bdd883$var$getUrl","response","data","fetch","e","console","error","href","message","ok","status","json","e1","searchWikiPagesByTitle","title","limit","action","search","format","$dfb6070808bdd883$export$2e2bcd8739ae039","$dad545c909cfec2d$var$SEARCHES_KEY","$dad545c909cfec2d$var$searchEl","document","getElementById","$dad545c909cfec2d$var$suggestionListEl","$dad545c909cfec2d$var$lastSearchListEl","$dad545c909cfec2d$var$contentEl","$dad545c909cfec2d$var$searchTimer","$dad545c909cfec2d$var$getSuggestionElements","suggestions","local","result","searchString","suggestionEl","createElement","className","linkEl","onclick","$dad545c909cfec2d$var$onSuggestionClicked","push","event","preventDefault","src","this","searches","$dad545c909cfec2d$var$getStoredSearches","localStorage","setItem","JSON","stringify","$dad545c909cfec2d$var$showLastSearches","$dad545c909cfec2d$var$storeSearch","innerHTML","getItem","parse","lastSearches","slice","reverse","$dad545c909cfec2d$var$clearSuggestions","oninput","clearTimeout","setTimeout","localSuggestions","filter","searchString_","$dad545c909cfec2d$var$searchInStorage","length","then","searchResult","remoteSuggestions","titles","urls","reduce","index","$dad545c909cfec2d$var$getSuggestions","catch","log","window","onstorage"],"version":3,"file":"index.a20b110a.js.map"}